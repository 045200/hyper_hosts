name: 自动更新 Hosts (北京时间)

on:
  schedule:
    - cron: '0 0,12 * * *'  # UTC时间每天0点和12点（北京时间8点和20点）
  workflow_dispatch: {}      # 允许手动触发

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai      # 强制设置容器时区

    steps:
    # ----------------- 代码检出 -----------------
    - name: 🛎️ 检出代码
      uses: actions/checkout@v4
      with:
        persist-credentials: false  # 确保后续推送权限

    # ----------------- 路径验证 -----------------
    - name: 📂 显示工作目录
      run: pwd && ls -la       # 调试：确认当前路径和文件结构

    # ----------------- Python环境 -----------------
    - name: 🐍 设置 Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    # ----------------- 依赖安装 -----------------
    - name: 📦 安装 Python 依赖
      run: |
        pip install -r requirements.txt
        pip list                 # 调试：显示已安装的包

    # ----------------- 核心逻辑 -----------------
    - name: ⚙️ 执行合并脚本
      run: python dl.py || exit 1  # 确保脚本失败时终止流程

    # ----------------- 文件验证 -----------------
    - name: 🔍 验证 hosts.txt 生成
      run: |
        if [ ! -f "hosts.txt" ]; then
          echo "❌ 错误：hosts.txt 未生成！"
          exit 1
        fi
        echo "✅ 文件内容预览："
        head -n 5 hosts.txt      # 显示文件前5行

    # ----------------- 提交变更 -----------------
    - name: 🔄 推送更新
      run: |
        # 配置 Git 身份
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions-bot@users.noreply.github.com"

        # 带时区的时间戳
        COMMIT_TIME=$(date "+%Y-%m-%d %H:%M %Z (UTC+8)")

        # 检测文件变更
        if git diff --exit-code --quiet hosts.txt; then
          echo "🟢 未检测到 hosts.txt 变更"
        else
          echo "🔵 检测到变更，正在提交..."
          git add hosts.txt
          git commit -m "自动同步于 ${COMMIT_TIME}"
          git push
          echo "✅ 已提交并推送变更"
        fi
